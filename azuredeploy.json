{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "region": { 
      "type": "string", 
      "defaultValue": "Germany West Central",
      "allowedValues": [
        "Germany West Central",
        "West Europe", 
        "North Europe",
        "East US",
        "West US 2",
        "Central US",
        "East US 2",
        "West US 3",
        "Southeast Asia",
        "East Asia",
        "Japan East",
        "Japan West",
        "Australia East",
        "Australia Southeast",
        "Canada Central",
        "Canada East",
        "UK South",
        "UK West",
        "France Central",
        "France South",
        "Switzerland North",
        "Switzerland West",
        "Norway East",
        "Norway West",
        "Sweden Central",
        "Italy North",
        "Spain Central",
        "Poland Central",
        "South Africa North",
        "UAE North",
        "Brazil South",
        "Central India",
        "South India",
        "West India"
      ]
    },
    "prefix": { "type": "string", "defaultValue": "pgpatroni" },
    "adminUsername": { "type": "string", "defaultValue": "azureuser" },
    "adminPassword": { "type": "secureString", "defaultValue": "Azure123!@#" },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D4s_v5",
      "allowedValues": [
        "Standard_D2s_v5",
        "Standard_D4s_v5",
        "Standard_D8s_v5",
        "Standard_D16s_v5",
        "Standard_E4s_v5",
        "Standard_E8s_v5"
      ],
      "metadata": {
        "description": "Size of the database VMs"
      }
    },
    "dataDiskSizeGB": { "type": "int", "defaultValue": 1024 },
    "walDiskSizeGB": { "type": "int", "defaultValue": 512 },
    "addressPrefix": { "type": "string", "defaultValue": "10.50.0.0/16" },
    "subnetPrefix": { "type": "string", "defaultValue": "10.50.1.0/24" },
    "lbPrivateIP": { "type": "string", "defaultValue": "10.50.1.10" },
    "postgresPassword": { "type": "secureString", "defaultValue": "ChangeMe123!" },
    "replicatorPassword": { "type": "secureString", "defaultValue": "ChangeMe123!" },
    "enablePublicLB": { "type": "bool", "defaultValue": false },
    "enablePgBouncerTier": { "type": "bool", "defaultValue": true },
    "pgbouncerLbPrivateIP": { "type": "string", "defaultValue": "10.50.1.11" },
    "pgbouncerDefaultPool": { "type": "int", "defaultValue": 200 },
    "pgbouncerMaxClientConn": { "type": "int", "defaultValue": 2000 },
    "pgbouncerAdminUser": { "type": "string", "defaultValue": "pgbouncer" },
    "pgbouncerAdminPass": { "type": "secureString", "defaultValue": "StrongPass123!" }
  },
  "variables": {
    "vnetName": "[format('{0}-vnet', parameters('prefix'))]",
    "subnetName": "db",
    "nsgName": "[format('{0}-nsg', parameters('prefix'))]",
    "ilbName": "[format('{0}-ilb', parameters('prefix'))]",
    "elbName": "[format('{0}-elb', parameters('prefix'))]",
    "pgbIlbName": "[format('{0}-pgb-ilb', parameters('prefix'))]",
    "bePoolName": "bepool",
    "pgbBePoolName": "pgb-bepool",
    "probeName": "patroniProbe",
    "pgbProbeName": "pgbProbe",
    "lbruleName": "pg",
    "pgbRuleName": "pgb",
    "vmNames": [
      "[format('{0}-1', parameters('prefix'))]",
      "[format('{0}-2', parameters('prefix'))]",
      "[format('{0}-3', parameters('prefix'))]"
    ],
    "vmIps": [ "10.50.1.4", "10.50.1.5", "10.50.1.6" ],
    "vmZones": [ "1", "3", "1" ],
    "pgbVmNames": [
      "[format('{0}-pgb-1', parameters('prefix'))]",
      "[format('{0}-pgb-2', parameters('prefix'))]"
    ],
    "pgbVmIps": [ "10.50.1.7", "10.50.1.8" ],
    "pgbVmZones": [ "1", "3" ],
    "cloudInitScript": "I2Nsb3VkLWNvbmZpZw0KcGFja2FnZV91cGRhdGU6IHRydWUNCnBhY2thZ2VfdXBncmFkZTogdHJ1ZQ0KDQpwYWNrYWdlczoNCiAgLSBqcQ0KICAtIGN1cmwNCiAgLSBnbnVwZw0KICAtIGxzYi1yZWxlYXNlDQogIC0gc29mdHdhcmUtcHJvcGVydGllcy1jb21tb24NCiAgLSBweXRob24zLXBpcA0KICAtIGhhcHJveHkNCiAgLSBldGNkDQoNCndyaXRlX2ZpbGVzOg0KICAtIHBhdGg6IC90bXAvc2V0dXAtcGF0cm9uaS5zaA0KICAgIHBlcm1pc3Npb25zOiAnMDc1NScNCiAgICBjb250ZW50OiB8DQogICAgICAjIS9iaW4vYmFzaA0KICAgICAgc2V0IC1lDQogICAgICBjdXJsIC1mc1NMIGh0dHBzOi8vd3d3LnBvc3RncmVzcWwub3JnL21lZGlhL2tleXMvQUNDQzRDRjguYXNjIHwgZ3BnIC0tZGVhcm1vciAtbyAvdXNyL3NoYXJlL2tleXJpbmdzL3BnLmdwZw0KICAgICAgZWNobyAiZGViIFtzaWduZWQtYnk9L3Vzci9zaGFyZS9rZXlyaW5ncy9wZy5ncGddIGh0dHA6Ly9hcHQucG9zdGdyZXNxbC5vcmcvcHViL3JlcG9zL2FwdCAkKGxzYl9yZWxlYXNlIC1jcyktcGdkZyBtYWluIiA+IC9ldGMvYXB0L3NvdXJjZXMubGlzdC5kL3BnLmxpc3QNCiAgICAgIGFwdC1nZXQgdXBkYXRlDQogICAgICBhcHQtZ2V0IGluc3RhbGwgLXkgcG9zdGdyZXNxbC0xNiBwb3N0Z3Jlc3FsLTE2LXBnbG9naWNhbCBweXRob24zLXBzeWNvcGcyDQogICAgICBzeXNjdGwgLXcgdm0uc3dhcHBpbmVzcz0xDQogICAgICBzeXNjdGwgLXcgdm0ubWF4X21hcF9jb3VudD0yNjIxNDQNCiAgICAgIGVjaG8gInZtLnN3YXBwaW5lc3M9MSIgPj4gL2V0Yy9zeXNjdGwuY29uZg0KICAgICAgZWNobyAidm0ubWF4X21hcF9jb3VudD0yNjIxNDQiID4+IC9ldGMvc3lzY3RsLmNvbmYNCiAgICAgIGVjaG8gIiogc29mdCBub2ZpbGUgMTAwMDAwIiA+PiAvZXRjL3NlY3VyaXR5L2xpbWl0cy5jb25mDQogICAgICBlY2hvICIqIGhhcmQgbm9maWxlIDEwMDAwMCIgPj4gL2V0Yy9zZWN1cml0eS9saW1pdHMuY29uZg0KICAgICAgDQogICAgICBESVNLX0RBVEE9L2Rldi9kaXNrL2F6dXJlL3Njc2kxL2x1bjANCiAgICAgIGlmIFsgLWIgIiRESVNLX0RBVEEiIF07IHRoZW4NCiAgICAgICAgcGFydGVkIC1zICR7RElTS19EQVRBfSBta2xhYmVsIGdwdCBta3BhcnQgcHJpbWFyeSBleHQ0IDFNaUIgMTAwJQ0KICAgICAgICBzbGVlcCAyDQogICAgICAgIG1rZnMuZXh0NCAtRiAke0RJU0tfREFUQX0xDQogICAgICAgIG1rZGlyIC1wIC9wZ2RhdGENCiAgICAgICAgZWNobyAiJHtESVNLX0RBVEF9MSAvcGdkYXRhIGV4dDQgZGVmYXVsdHMsbm9hdGltZSAwIDIiID4+IC9ldGMvZnN0YWINCiAgICAgICAgbW91bnQgLWENCiAgICAgIGZpDQogICAgICANCiAgICAgIERJU0tfV0FMPS9kZXYvZGlzay9henVyZS9zY3NpMS9sdW4xDQogICAgICBpZiBbIC1iICIkRElTS19XQUwiIF07IHRoZW4NCiAgICAgICAgcGFydGVkIC1zICR7RElTS19XQUx9IG1rbGFiZWwgZ3B0IG1rcGFydCBwcmltYXJ5IGV4dDQgMU1pQiAxMDAlDQogICAgICAgIHNsZWVwIDINCiAgICAgICAgbWtmcy5leHQ0IC1GICR7RElTS19XQUx9MQ0KICAgICAgICBta2RpciAtcCAvcGd3YWwNCiAgICAgICAgZWNobyAiJHtESVNLX1dBTH0xIC9wZ3dhbCBleHQ0IGRlZmF1bHRzLG5vYXRpbWUgMCAyIiA+PiAvZXRjL2ZzdGFiDQogICAgICAgIG1vdW50IC1hDQogICAgICBmaQ0KICAgICAgDQogICAgICBzeXN0ZW1jdGwgc3RvcCBwb3N0Z3Jlc3FsDQogICAgICByc3luYyAtYSAvdmFyL2xpYi9wb3N0Z3Jlc3FsLzE2L21haW4vIC9wZ2RhdGEvIHx8IHRydWUNCiAgICAgIGNob3duIC1SIHBvc3RncmVzOnBvc3RncmVzIC9wZ2RhdGEgL3Bnd2FsDQogICAgICBzZWQgLWkgInN8XmRhdGFfZGlyZWN0b3J5ID0gLip8ZGF0YV9kaXJlY3RvcnkgPSAnL3BnZGF0YSd8IiAvZXRjL3Bvc3RncmVzcWwvMTYvbWFpbi9wb3N0Z3Jlc3FsLmNvbmYNCiAgICAgIA0KICAgICAgSE9TVE5BTUU9JChob3N0bmFtZSAtcykNCiAgICAgIElQPSQoaXAgLTQgYWRkciBzaG93IGRldiBldGgwIHwgYXdrICcvaW5ldCAve3ByaW50ICQyfScgfCBjdXQgLWQvIC1mMSkNCiAgICAgIA0KICAgICAgY2F0ID4gL2V0Yy9kZWZhdWx0L2V0Y2QgPDxFVENERU9GDQogICAgICBFVENEX05BTUU9IiR7SE9TVE5BTUV9Ig0KICAgICAgRVRDRF9JTklUSUFMX0NMVVNURVI9InBncGF0cm9uaS0xPWh0dHA6Ly8xMC41MC4xLjQ6MjM4MCxwZ3BhdHJvbmktMj1odHRwOi8vMTAuNTAuMS41OjIzODAscGdwYXRyb25pLTM9aHR0cDovLzEwLjUwLjEuNjoyMzgwIg0KICAgICAgRVRDRF9JTklUSUFMX0NMVVNURVJfU1RBVEU9Im5ldyINCiAgICAgIEVUQ0RfSU5JVElBTF9BRFZFUlRJU0VfUEVFUl9VUkxTPSJodHRwOi8vJHtJUH06MjM4MCINCiAgICAgIEVUQ0RfQURWRVJUSVNFX0NMSUVOVF9VUkxTPSJodHRwOi8vJHtJUH06MjM3OSINCiAgICAgIEVUQ0RfTElTVEVOX1BFRVJfVVJMUz0iaHR0cDovLyR7SVB9OjIzODAiDQogICAgICBFVENEX0xJU1RFTl9DTElFTlRfVVJMUz0iaHR0cDovLyR7SVB9OjIzNzkiDQogICAgICBFVENERU9GDQogICAgICANCiAgICAgIHN5c3RlbWN0bCBlbmFibGUgZXRjZA0KICAgICAgc3lzdGVtY3RsIHJlc3RhcnQgZXRjZA0KICAgICAgDQogICAgICBwaXAzIGluc3RhbGwgcGF0cm9uaVtldGNkXSByZXF1ZXN0cw0KICAgICAgbWtkaXIgLXAgL2V0Yy9wYXRyb25pDQogICAgICANCiAgICAgIGNhdCA+IC9ldGMvcGF0cm9uaS9wYXRyb25pLnltbCA8PFBBVFJPTklFT0YNCiAgICAgIHNjb3BlOiBwZy1oYQ0KICAgICAgbmFtZXNwYWNlOiAvc2VydmljZS8NCiAgICAgIG5hbWU6ICR7SE9TVE5BTUV9DQogICAgICByZXN0YXBpOg0KICAgICAgICBsaXN0ZW46IDAuMC4wLjA6ODAwOA0KICAgICAgICBjb25uZWN0X2FkZHJlc3M6ICR7SVB9OjgwMDgNCiAgICAgIGV0Y2Q6DQogICAgICAgIGhvc3RzOiAxMC41MC4xLjQ6MjM3OSwxMC41MC4xLjU6MjM3OSwxMC41MC4xLjY6MjM3OQ0KICAgICAgYm9vdHN0cmFwOg0KICAgICAgICBkY3M6DQogICAgICAgICAgdHRsOiAyMA0KICAgICAgICAgIGxvb3Bfd2FpdDogNQ0KICAgICAgICAgIHJldHJ5X3RpbWVvdXQ6IDUNCiAgICAgICAgICBtYXhpbXVtX2xhZ19vbl9mYWlsb3ZlcjogMTA0ODU3Ng0KICAgICAgICAgIHN5bmNocm9ub3VzX21vZGU6IHRydWUNCiAgICAgICAgICBzeW5jaHJvbm91c19tb2RlX3N0cmljdDogZmFsc2UNCiAgICAgICAgICBzeW5jaHJvbm91c19ub2RlX2NvdW50OiAxDQogICAgICAgICAgcG9zdGdyZXNxbDoNCiAgICAgICAgICAgIHBhcmFtZXRlcnM6DQogICAgICAgICAgICAgIHdhbF9sZXZlbDogbG9naWNhbA0KICAgICAgICAgICAgICBtYXhfd2FsX3NlbmRlcnM6IDIwDQogICAgICAgICAgICAgIG1heF9yZXBsaWNhdGlvbl9zbG90czogMjANCiAgICAgICAgICAgICAgc2hhcmVkX2J1ZmZlcnM6IDRHQg0KICAgICAgICAgICAgICBlZmZlY3RpdmVfY2FjaGVfc2l6ZTogOEdCDQogICAgICAgICAgICAgIG1haW50ZW5hbmNlX3dvcmtfbWVtOiAxR0INCiAgICAgICAgICAgICAgd29ya19tZW06IDY0TUINCiAgICAgICAgICAgICAgY2hlY2twb2ludF90aW1lb3V0OiAxMG1pbg0KICAgICAgICAgICAgICBzeW5jaHJvbm91c19jb21taXQ6IG9uDQogICAgICAgICAgICB1c2Vfc2xvdHM6IHRydWUNCiAgICAgICAgICAgIHVzZV9wZ19yZXdpbmQ6IHRydWUNCiAgICAgICAgaW5pdGRiOg0KICAgICAgICAgIC0gZW5jb2Rpbmc6IFVURjgNCiAgICAgICAgICAtIGRhdGEtY2hlY2tzdW1zDQogICAgICAgIHBnX2hiYToNCiAgICAgICAgICAtIGhvc3QgcmVwbGljYXRpb24gcmVwbGljYXRvciAxMC41MC4wLjAvMTYgbWQ1DQogICAgICAgICAgLSBob3N0IGFsbCBhbGwgMTAuNTAuMC4wLzE2IG1kNQ0KICAgICAgICB1c2VyczoNCiAgICAgICAgICByZXBsaWNhdG9yOg0KICAgICAgICAgICAgcGFzc3dvcmQ6IENoYW5nZU1lMTIzIQ0KICAgICAgICAgICAgb3B0aW9uczoNCiAgICAgICAgICAgICAgLSByZXBsaWNhdGlvbg0KICAgICAgcG9zdGdyZXNxbDoNCiAgICAgICAgbGlzdGVuOiAwLjAuMC4wOjU0MzINCiAgICAgICAgY29ubmVjdF9hZGRyZXNzOiAke0lQfTo1NDMyDQogICAgICAgIGRhdGFfZGlyOiAvcGdkYXRhDQogICAgICAgIGJpbl9kaXI6IC91c3IvbGliL3Bvc3RncmVzcWwvMTYvYmluDQogICAgICAgIHBhcmFtZXRlcnM6IHt9DQogICAgICAgIGF1dGhlbnRpY2F0aW9uOg0KICAgICAgICAgIHN1cGVydXNlcjoNCiAgICAgICAgICAgIHVzZXJuYW1lOiBwb3N0Z3Jlcw0KICAgICAgICAgICAgcGFzc3dvcmQ6IENoYW5nZU1lMTIzIQ0KICAgICAgICAgIHJlcGxpY2F0aW9uOg0KICAgICAgICAgICAgdXNlcm5hbWU6IHJlcGxpY2F0b3INCiAgICAgICAgICAgIHBhc3N3b3JkOiBDaGFuZ2VNZTEyMyENCiAgICAgIHRhZ3M6DQogICAgICAgIG5vZmFpbG92ZXI6IGZhbHNlDQogICAgICAgIG5vbG9hZGJhbGFuY2U6IGZhbHNlDQogICAgICAgIGNsb25lZnJvbTogZmFsc2UNCiAgICAgIFBBVFJPTklFT0YNCiAgICAgIA0KICAgICAgY2hvd24gcG9zdGdyZXM6cG9zdGdyZXMgL2V0Yy9wYXRyb25pL3BhdHJvbmkueW1sDQogICAgICANCiAgICAgIGNhdCA+IC9ldGMvc3lzdGVtZC9zeXN0ZW0vcGF0cm9uaS5zZXJ2aWNlIDw8U0VSVklDRUVPRg0KICAgICAgW1VuaXRdDQogICAgICBEZXNjcmlwdGlvbj1QYXRyb25pIFBvc3RncmVTUUwgSEENCiAgICAgIEFmdGVyPW5ldHdvcmsudGFyZ2V0DQogICAgICBbU2VydmljZV0NCiAgICAgIFR5cGU9c2ltcGxlDQogICAgICBVc2VyPXBvc3RncmVzDQogICAgICBHcm91cD1wb3N0Z3Jlcw0KICAgICAgRXhlY1N0YXJ0PS91c3IvbG9jYWwvYmluL3BhdHJvbmkgL2V0Yy9wYXRyb25pL3BhdHJvbmkueW1sDQogICAgICBSZXN0YXJ0PW9uLWZhaWx1cmUNCiAgICAgIExpbWl0Tk9GSUxFPTEwMDAwMA0KICAgICAgW0luc3RhbGxdDQogICAgICBXYW50ZWRCeT1tdWx0aS11c2VyLnRhcmdldA0KICAgICAgU0VSVklDRUVPRg0KICAgICAgDQogICAgICBzeXN0ZW1jdGwgZGFlbW9uLXJlbG9hZA0KICAgICAgc3lzdGVtY3RsIGVuYWJsZSBwYXRyb25pDQogICAgICBzeXN0ZW1jdGwgc3RhcnQgcGF0cm9uaQ0KICAgICAgDQogICAgICBjYXQgPiAvZXRjL2hhcHJveHkvaGFwcm94eS5jZmcgPDxIQVBST1hZRU9GDQogICAgICBnbG9iYWwNCiAgICAgICAgICBtYXhjb25uIDEwMDAwMA0KICAgICAgZGVmYXVsdHMNCiAgICAgICAgICBtb2RlIHRjcA0KICAgICAgICAgIHRpbWVvdXQgY29ubmVjdCA1cw0KICAgICAgICAgIHRpbWVvdXQgY2xpZW50ICAyNGgNCiAgICAgICAgICB0aW1lb3V0IHNlcnZlciAgMjRoDQogICAgICBmcm9udGVuZCBwZ19mZQ0KICAgICAgICAgIGJpbmQgKjo1NDMyDQogICAgICAgICAgZGVmYXVsdF9iYWNrZW5kIHBnX2JlDQogICAgICBiYWNrZW5kIHBnX2JlDQogICAgICAgICAgb3B0aW9uIHRjcC1jaGVjaw0KICAgICAgICAgIHRjcC1jaGVjayBjb25uZWN0IHBvcnQgNTQzMg0KICAgICAgICAgIHNlcnZlciBwZzEgMTAuNTAuMS40OjU0MzIgY2hlY2sNCiAgICAgICAgICBzZXJ2ZXIgcGcyIDEwLjUwLjEuNTo1NDMyIGNoZWNrIGJhY2t1cA0KICAgICAgICAgIHNlcnZlciBwZzMgMTAuNTAuMS42OjU0MzIgY2hlY2sgYmFja3VwDQogICAgICBIQVBST1hZRU9GDQogICAgICANCiAgICAgIHN5c3RlbWN0bCBlbmFibGUgaGFwcm94eQ0KICAgICAgc3lzdGVtY3RsIHJlc3RhcnQgaGFwcm94eQ0KDQpydW5jbWQ6DQogIC0gL3RtcC9zZXR1cC1wYXRyb25pLnNoID4gL3Zhci9sb2cvcGF0cm9uaS1zZXR1cC5sb2cgMj4mMQ0K",
    "pgbCloudInitScript": "I2Nsb3VkLWNvbmZpZw0KcGFja2FnZV91cGRhdGU6IHRydWUNCnBhY2thZ2VfdXBncmFkZTogdHJ1ZQ0KDQpwYWNrYWdlczoNCiAgLSBwZ2JvdW5jZXINCiAgLSBwb3N0Z3Jlc3FsLWNsaWVudA0KDQp3cml0ZV9maWxlczoNCiAgLSBwYXRoOiAvdG1wL3NldHVwLXBnYm91bmNlci5zaA0KICAgIHBlcm1pc3Npb25zOiAnMDc1NScNCiAgICBjb250ZW50OiB8DQogICAgICAjIS9iaW4vYmFzaA0KICAgICAgc2V0IC1lDQogICAgICANCiAgICAgIGNhdCA+IC9ldGMvcGdib3VuY2VyL3BnYm91bmNlci5pbmkgPDxQR0JFT0YNCiAgICAgIFtkYXRhYmFzZXNdDQogICAgICBwb3N0Z3JlcyA9IGhvc3Q9MTAuNTAuMS4xMCBwb3J0PTU0MzIgZGJuYW1lPXBvc3RncmVzDQogICAgICAqID0gaG9zdD0xMC41MC4xLjEwIHBvcnQ9NTQzMg0KICAgICAgW3BnYm91bmNlcl0NCiAgICAgIGxpc3Rlbl9hZGRyID0gMC4wLjAuMA0KICAgICAgbGlzdGVuX3BvcnQgPSA2NDMyDQogICAgICBwb29sX21vZGUgPSB0cmFuc2FjdGlvbg0KICAgICAgZGVmYXVsdF9wb29sX3NpemUgPSAyMDANCiAgICAgIG1heF9jbGllbnRfY29ubiA9IDIwMDANCiAgICAgIGlnbm9yZV9zdGFydHVwX3BhcmFtZXRlcnMgPSBleHRyYV9mbG9hdF9kaWdpdHMNCiAgICAgIHNlcnZlcl90bHNfc3NsbW9kZSA9IHByZWZlcg0KICAgICAgYXV0aF90eXBlID0gbWQ1DQogICAgICBhdXRoX2ZpbGUgPSAvZXRjL3BnYm91bmNlci91c2VybGlzdC50eHQNCiAgICAgIGFkbWluX3VzZXJzID0gcGdib3VuY2VyDQogICAgICBQR0JFT0YNCiAgICAgIA0KICAgICAgY2F0ID4gL2V0Yy9wZ2JvdW5jZXIvdXNlcmxpc3QudHh0IDw8VVNFUkVPRg0KICAgICAgInBnYm91bmNlciIgIlN0cm9uZ1Bhc3MxMjMhIg0KICAgICAgVVNFUkVPRg0KICAgICAgDQogICAgICBjaG93biBwZ2JvdW5jZXI6cGdib3VuY2VyIC9ldGMvcGdib3VuY2VyL3VzZXJsaXN0LnR4dA0KICAgICAgY2htb2QgNjQwIC9ldGMvcGdib3VuY2VyL3VzZXJsaXN0LnR4dA0KICAgICAgDQogICAgICBzeXN0ZW1jdGwgZW5hYmxlIHBnYm91bmNlcg0KICAgICAgc3lzdGVtY3RsIHJlc3RhcnQgcGdib3VuY2VyDQoNCnJ1bmNtZDoNCiAgLSAvdG1wL3NldHVwLXBnYm91bmNlci5zaCA+IC92YXIvbG9nL3BnYm91bmNlci1zZXR1cC5sb2cgMj4mMQ0K"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-11-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('region')]",
      "properties": {
        "addressSpace": { "addressPrefixes": [ "[parameters('addressPrefix')]" ] },
        "subnets": [ { "name": "[variables('subnetName')]", "properties": { "addressPrefix": "[parameters('subnetPrefix')]" } } ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-11-01",
      "name": "[variables('nsgName')]",
      "location": "[parameters('region')]",
      "properties": {
        "securityRules": [
          { "name": "ssh", "properties": { "priority": 100, "access": "Allow", "protocol": "Tcp", "direction": "Inbound", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "22" } },
          { "name": "postgres", "properties": { "priority": 110, "access": "Allow", "protocol": "Tcp", "direction": "Inbound", "sourceAddressPrefix": "10.50.0.0/16", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "5432" } },
          { "name": "pgbouncer", "properties": { "priority": 115, "access": "Allow", "protocol": "Tcp", "direction": "Inbound", "sourceAddressPrefix": "10.50.0.0/16", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "6432" } },
          { "name": "patroni", "properties": { "priority": 120, "access": "Allow", "protocol": "Tcp", "direction": "Inbound", "sourceAddressPrefix": "10.50.0.0/16", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "8008" } },
          { "name": "etcd", "properties": { "priority": 130, "access": "Allow", "protocol": "Tcp", "direction": "Inbound", "sourceAddressPrefix": "10.50.0.0/16", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "2379-2380" } }
        ]
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2023-11-01",
      "name": "[variables('ilbName')]",
      "location": "[parameters('region')]",
      "sku": { "name": "Standard" },
      "properties": {
        "frontendIPConfigurations": [ { "name": "fe", "properties": { "subnet": { "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]" }, "privateIPAllocationMethod": "Static", "privateIPAddress": "[parameters('lbPrivateIP')]" } } ],
        "backendAddressPools": [ { "name": "[variables('bePoolName')]" } ],
        "probes": [ { "name": "[variables('probeName')]", "properties": { "protocol": "Http", "port": 8008, "requestPath": "/primary", "intervalInSeconds": 5, "numberOfProbes": 2 } } ],
        "loadBalancingRules": [ { "name": "[variables('lbruleName')]", "properties": { "frontendIPConfiguration": { "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('ilbName'), 'fe')]" }, "backendAddressPool": { "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ilbName'), variables('bePoolName'))]" }, "protocol": "Tcp", "frontendPort": 5432, "backendPort": 5432, "enableFloatingIP": false, "idleTimeoutInMinutes": 30, "probe": { "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ilbName'), variables('probeName'))]" } } } ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}-elb-pip', parameters('prefix'))]",
      "location": "[parameters('region')]",
      "sku": { "name": "Standard" },
      "properties": { "publicIPAllocationMethod": "Static" },
      "condition": "[parameters('enablePublicLB')]"
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2023-11-01",
      "name": "[variables('elbName')]",
      "location": "[parameters('region')]",
      "sku": { "name": "Standard" },
      "condition": "[parameters('enablePublicLB')]",
      "properties": {
        "frontendIPConfigurations": [ { "name": "fe", "properties": { "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-elb-pip', parameters('prefix')))]" } } } ],
        "backendAddressPools": [ { "name": "[variables('bePoolName')]" } ],
        "probes": [ { "name": "[variables('probeName')]", "properties": { "protocol": "Http", "port": 8008, "requestPath": "/primary", "intervalInSeconds": 5, "numberOfProbes": 2 } } ],
        "loadBalancingRules": [ { "name": "[variables('lbruleName')]", "properties": { "frontendIPConfiguration": { "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('elbName'), 'fe')]" }, "backendAddressPool": { "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ilbName'), variables('bePoolName'))]" }, "protocol": "Tcp", "frontendPort": 5432, "backendPort": 5432, "enableFloatingIP": false, "idleTimeoutInMinutes": 30, "probe": { "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ilbName'), variables('probeName'))]" } } } ]
      },
      "dependsOn": [ "[resourceId('Microsoft.Network/loadBalancers', variables('ilbName'))]" ]
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2023-11-01",
      "name": "[variables('pgbIlbName')]",
      "location": "[parameters('region')]",
      "sku": { "name": "Standard" },
      "condition": "[parameters('enablePgBouncerTier')]",
      "properties": {
        "frontendIPConfigurations": [ { "name": "fe", "properties": { "subnet": { "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]" }, "privateIPAllocationMethod": "Static", "privateIPAddress": "[parameters('pgbouncerLbPrivateIP')]" } } ],
        "backendAddressPools": [ { "name": "[variables('pgbBePoolName')]" } ],
        "probes": [ { "name": "[variables('pgbProbeName')]", "properties": { "protocol": "Tcp", "port": 6432, "intervalInSeconds": 5, "numberOfProbes": 2 } } ],
        "loadBalancingRules": [ { "name": "[variables('pgbRuleName')]", "properties": { "frontendIPConfiguration": { "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('pgbIlbName'), 'fe')]" }, "backendAddressPool": { "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('pgbIlbName'), variables('pgbBePoolName'))]" }, "protocol": "Tcp", "frontendPort": 6432, "backendPort": 6432, "enableFloatingIP": false, "idleTimeoutInMinutes": 30, "probe": { "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('pgbIlbName'), variables('pgbProbeName'))]" } } } ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}-nic', variables('vmNames')[copyIndex()])]",
      "location": "[parameters('region')]",
      "copy": { "name": "nicLoop", "count": 3 },
      "properties": {
        "ipConfigurations": [ { "name": "ipconfig1", "properties": { "subnet": { "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]" }, "privateIPAllocationMethod": "Static", "privateIPAddress": "[variables('vmIps')[copyIndex()]]", "loadBalancerBackendAddressPools": [ { "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ilbName'), variables('bePoolName'))]" } ] } } ],
        "networkSecurityGroup": { "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]" }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('ilbName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}-nic', variables('pgbVmNames')[copyIndex()])]",
      "location": "[parameters('region')]",
      "condition": "[parameters('enablePgBouncerTier')]",
      "copy": { "name": "pgbNicLoop", "count": 2 },
      "properties": {
        "ipConfigurations": [ { "name": "ipconfig1", "properties": { "subnet": { "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]" }, "privateIPAllocationMethod": "Static", "privateIPAddress": "[variables('pgbVmIps')[copyIndex()]]", "loadBalancerBackendAddressPools": [ { "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('pgbIlbName'), variables('pgbBePoolName'))]" } ] } } ],
        "networkSecurityGroup": { "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]" }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('pgbIlbName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-03-01",
      "name": "[variables('vmNames')[copyIndex()]]",
      "location": "[parameters('region')]",
      "zones": [ "[variables('vmZones')[copyIndex()]]" ],
      "copy": { "name": "vmLoop", "count": 3 },
      "properties": {
        "hardwareProfile": { "vmSize": "[parameters('vmSize')]" },
        "osProfile": {
          "computerName": "[variables('vmNames')[copyIndex()]]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": { "disablePasswordAuthentication": false },
          "customData": "[variables('cloudInitScript')]"
        },
        "storageProfile": {
          "imageReference": { "publisher": "Canonical", "offer": "0001-com-ubuntu-server-jammy", "sku": "22_04-lts", "version": "latest" },
          "osDisk": { "createOption": "FromImage", "managedDisk": { "storageAccountType": "Premium_LRS" } },
          "dataDisks": [ { "lun": 0, "createOption": "Empty", "diskSizeGB": "[parameters('dataDiskSizeGB')]", "managedDisk": { "storageAccountType": "Premium_LRS" } }, { "lun": 1, "createOption": "Empty", "diskSizeGB": "[parameters('walDiskSizeGB')]", "managedDisk": { "storageAccountType": "Premium_LRS" } } ]
        },
        "networkProfile": { "networkInterfaces": [ { "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmNames')[copyIndex()]))]" } ] }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmNames')[copyIndex()]))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-03-01",
      "name": "[variables('pgbVmNames')[copyIndex()]]",
      "location": "[parameters('region')]",
      "zones": [ "[variables('pgbVmZones')[copyIndex()]]" ],
      "condition": "[parameters('enablePgBouncerTier')]",
      "copy": { "name": "pgbVmLoop", "count": 2 },
      "properties": {
        "hardwareProfile": { "vmSize": "Standard_D2s_v5" },
        "osProfile": {
          "computerName": "[variables('pgbVmNames')[copyIndex()]]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": { "disablePasswordAuthentication": false },
          "customData": "[variables('pgbCloudInitScript')]"
        },
        "storageProfile": {
          "imageReference": { "publisher": "Canonical", "offer": "0001-com-ubuntu-server-jammy", "sku": "22_04-lts", "version": "latest" },
          "osDisk": { "createOption": "FromImage", "managedDisk": { "storageAccountType": "Premium_LRS" } }
        },
        "networkProfile": { "networkInterfaces": [ { "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('pgbVmNames')[copyIndex()]))]" } ] }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('pgbVmNames')[copyIndex()]))]"
      ]
    }
  ],
  "outputs": {
    "dbIlbIP": { "type": "string", "value": "[reference(resourceId('Microsoft.Network/loadBalancers', variables('ilbName'))).frontendIPConfigurations[0].properties.privateIPAddress]" },
    "elbIP": { "type": "string", "value": "[if(parameters('enablePublicLB'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}-elb-pip', parameters('prefix')))).ipAddress, 'disabled')]" },
    "pgbIlbIP": { "type": "string", "value": "[if(parameters('enablePgBouncerTier'), reference(resourceId('Microsoft.Network/loadBalancers', variables('pgbIlbName'))).frontendIPConfigurations[0].properties.privateIPAddress, 'disabled')]" }
  }
}