{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "region": { 
      "type": "string", 
      "defaultValue": "Germany West Central",
      "allowedValues": [
        "Germany West Central",
        "West Europe", 
        "North Europe",
        "East US",
        "West US 2",
        "Central US",
        "East US 2",
        "West US 3",
        "Southeast Asia",
        "East Asia",
        "Japan East",
        "Japan West",
        "Australia East",
        "Australia Southeast",
        "Canada Central",
        "Canada East",
        "UK South",
        "UK West",
        "France Central",
        "France South",
        "Switzerland North",
        "Switzerland West",
        "Norway East",
        "Norway West",
        "Sweden Central",
        "Italy North",
        "Spain Central",
        "Poland Central",
        "South Africa North",
        "UAE North",
        "Brazil South",
        "Central India",
        "South India",
        "West India"
      ]
    },
    "prefix": { "type": "string", "defaultValue": "pgpatroni" },
    "adminUsername": { "type": "string", "defaultValue": "azureuser" },
    "adminPassword": { "type": "secureString", "defaultValue": "Azure123!@#" },
    "vmSize": { "type": "string", "defaultValue": "Standard_D8s_v5" },
    "dataDiskSizeGB": { "type": "int", "defaultValue": 1024 },
    "walDiskSizeGB": { "type": "int", "defaultValue": 512 },
    "addressPrefix": { "type": "string", "defaultValue": "10.50.0.0/16" },
    "subnetPrefix": { "type": "string", "defaultValue": "10.50.1.0/24" },
    "lbPrivateIP": { "type": "string", "defaultValue": "10.50.1.10" },
    "postgresPassword": { "type": "secureString", "defaultValue": "ChangeMe123!" },
    "replicatorPassword": { "type": "secureString", "defaultValue": "ChangeMe123!" },
    "enablePublicLB": { "type": "bool", "defaultValue": false },
    "enablePgBouncerTier": { "type": "bool", "defaultValue": true },
    "pgbouncerLbPrivateIP": { "type": "string", "defaultValue": "10.50.1.11" },
    "pgbouncerDefaultPool": { "type": "int", "defaultValue": 200 },
    "pgbouncerMaxClientConn": { "type": "int", "defaultValue": 2000 },
    "pgbouncerAdminUser": { "type": "string", "defaultValue": "pgbouncer" },
    "pgbouncerAdminPass": { "type": "secureString", "defaultValue": "StrongPass123!" }
  },
  "variables": {
    "vnetName": "[format('{0}-vnet', parameters('prefix'))]",
    "subnetName": "db",
    "nsgName": "[format('{0}-nsg', parameters('prefix'))]",
    "ilbName": "[format('{0}-ilb', parameters('prefix'))]",
    "elbName": "[format('{0}-elb', parameters('prefix'))]",
    "pgbIlbName": "[format('{0}-pgb-ilb', parameters('prefix'))]",
    "bePoolName": "bepool",
    "pgbBePoolName": "pgb-bepool",
    "probeName": "patroniProbe",
    "pgbProbeName": "pgbProbe",
    "lbruleName": "pg",
    "pgbRuleName": "pgb",
    "vmNames": [
      "[format('{0}-1', parameters('prefix'))]",
      "[format('{0}-2', parameters('prefix'))]",
      "[format('{0}-3', parameters('prefix'))]"
    ],
    "vmIps": [ "10.50.1.4", "10.50.1.5", "10.50.1.6" ],
    "vmZones": [ "1", "2", "3" ],
    "pgbVmNames": [
      "[format('{0}-pgb-1', parameters('prefix'))]",
      "[format('{0}-pgb-2', parameters('prefix'))]"
    ],
    "pgbVmIps": [ "10.50.1.7", "10.50.1.8" ],
    "pgbVmZones": [ "1", "2" ],
    "cloudInitScript": "https://raw.githubusercontent.com/gokhansalihyenigun/azure-patroni-ha/main/cloudinit/cloud-init.yaml",
    "pgbCloudInitScript": "[base64(concat('#cloud-config\npackage_update: true\npackage_upgrade: true\npackages:\n  - pgbouncer\nruncmd:\n  - |\n    IP=$(ip -4 addr show dev eth0 | awk \"/inet /{print $2}\" | cut -d/ -f1)\n    DB_ILB_IP=\"', parameters('lbPrivateIP'), '\"\n    ADMIN_USER=\"', parameters('pgbouncerAdminUser'), '\"\n    ADMIN_PASS=\"', parameters('pgbouncerAdminPass'), '\"\n    DEFAULT_POOL=\"', parameters('pgbouncerDefaultPool'), '\"\n    MAX_CLIENT_CONN=\"', parameters('pgbouncerMaxClientConn'), '\"\n    cat >/etc/pgbouncer/pgbouncer.ini <<EOF\n[databases]\npostgres = host=${DB_ILB_IP} port=5432 dbname=postgres\n* = host=${DB_ILB_IP} port=5432\n[pgbouncer]\nlisten_addr = 0.0.0.0\nlisten_port = 6432\npool_mode = transaction\ndefault_pool_size = ${DEFAULT_POOL}\nmax_client_conn = ${MAX_CLIENT_CONN}\nignore_startup_parameters = extra_float_digits\nserver_tls_sslmode = prefer\nauth_type = scram-sha-256\nauth_file = /etc/pgbouncer/userlist.txt\nadmin_users = ${ADMIN_USER}\nEOF\n    printf \"\\\"%s\\\" \\\"%s\\\"\\n\" ${ADMIN_USER} ${ADMIN_PASS} > /etc/pgbouncer/userlist.txt\n    chown pgbouncer:pgbouncer /etc/pgbouncer/userlist.txt\n    chmod 640 /etc/pgbouncer/userlist.txt\n    systemctl enable pgbouncer\n    systemctl restart pgbouncer'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-11-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('region')]",
      "properties": {
        "addressSpace": { "addressPrefixes": [ "[parameters('addressPrefix')]" ] },
        "subnets": [ { "name": "[variables('subnetName')]", "properties": { "addressPrefix": "[parameters('subnetPrefix')]" } } ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-11-01",
      "name": "[variables('nsgName')]",
      "location": "[parameters('region')]",
      "properties": {
        "securityRules": [
          { "name": "ssh", "properties": { "priority": 100, "access": "Allow", "protocol": "Tcp", "direction": "Inbound", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "22" } },
          { "name": "postgres", "properties": { "priority": 110, "access": "Allow", "protocol": "Tcp", "direction": "Inbound", "sourceAddressPrefix": "10.50.0.0/16", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "5432" } },
          { "name": "pgbouncer", "properties": { "priority": 115, "access": "Allow", "protocol": "Tcp", "direction": "Inbound", "sourceAddressPrefix": "10.50.0.0/16", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "6432" } },
          { "name": "patroni", "properties": { "priority": 120, "access": "Allow", "protocol": "Tcp", "direction": "Inbound", "sourceAddressPrefix": "10.50.0.0/16", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "8008" } },
          { "name": "etcd", "properties": { "priority": 130, "access": "Allow", "protocol": "Tcp", "direction": "Inbound", "sourceAddressPrefix": "10.50.0.0/16", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "2379-2380" } }
        ]
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2023-11-01",
      "name": "[variables('ilbName')]",
      "location": "[parameters('region')]",
      "sku": { "name": "Standard" },
      "properties": {
        "frontendIPConfigurations": [ { "name": "fe", "properties": { "subnet": { "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]" }, "privateIPAllocationMethod": "Static", "privateIPAddress": "[parameters('lbPrivateIP')]" } } ],
        "backendAddressPools": [ { "name": "[variables('bePoolName')]" } ],
        "probes": [ { "name": "[variables('probeName')]", "properties": { "protocol": "Http", "port": 8008, "requestPath": "/primary", "intervalInSeconds": 5, "numberOfProbes": 2 } } ],
        "loadBalancingRules": [ { "name": "[variables('lbruleName')]", "properties": { "frontendIPConfiguration": { "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('ilbName'), 'fe')]" }, "backendAddressPool": { "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ilbName'), variables('bePoolName'))]" }, "protocol": "Tcp", "frontendPort": 5432, "backendPort": 5432, "enableFloatingIP": false, "idleTimeoutInMinutes": 30, "probe": { "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ilbName'), variables('probeName'))]" } } } ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}-elb-pip', parameters('prefix'))]",
      "location": "[parameters('region')]",
      "sku": { "name": "Standard" },
      "properties": { "publicIPAllocationMethod": "Static" },
      "condition": "[parameters('enablePublicLB')]"
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2023-11-01",
      "name": "[variables('elbName')]",
      "location": "[parameters('region')]",
      "sku": { "name": "Standard" },
      "condition": "[parameters('enablePublicLB')]",
      "properties": {
        "frontendIPConfigurations": [ { "name": "fe", "properties": { "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-elb-pip', parameters('prefix')))]" } } } ],
        "backendAddressPools": [ { "name": "[variables('bePoolName')]" } ],
        "probes": [ { "name": "[variables('probeName')]", "properties": { "protocol": "Http", "port": 8008, "requestPath": "/primary", "intervalInSeconds": 5, "numberOfProbes": 2 } } ],
        "loadBalancingRules": [ { "name": "[variables('lbruleName')]", "properties": { "frontendIPConfiguration": { "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('elbName'), 'fe')]" }, "backendAddressPool": { "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ilbName'), variables('bePoolName'))]" }, "protocol": "Tcp", "frontendPort": 5432, "backendPort": 5432, "enableFloatingIP": false, "idleTimeoutInMinutes": 30, "probe": { "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ilbName'), variables('probeName'))]" } } } ]
      },
      "dependsOn": [ "[resourceId('Microsoft.Network/loadBalancers', variables('ilbName'))]" ]
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2023-11-01",
      "name": "[variables('pgbIlbName')]",
      "location": "[parameters('region')]",
      "sku": { "name": "Standard" },
      "condition": "[parameters('enablePgBouncerTier')]",
      "properties": {
        "frontendIPConfigurations": [ { "name": "fe", "properties": { "subnet": { "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]" }, "privateIPAllocationMethod": "Static", "privateIPAddress": "[parameters('pgbouncerLbPrivateIP')]" } } ],
        "backendAddressPools": [ { "name": "[variables('pgbBePoolName')]" } ],
        "probes": [ { "name": "[variables('pgbProbeName')]", "properties": { "protocol": "Tcp", "port": 6432, "intervalInSeconds": 5, "numberOfProbes": 2 } } ],
        "loadBalancingRules": [ { "name": "[variables('pgbRuleName')]", "properties": { "frontendIPConfiguration": { "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('pgbIlbName'), 'fe')]" }, "backendAddressPool": { "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('pgbIlbName'), variables('pgbBePoolName'))]" }, "protocol": "Tcp", "frontendPort": 6432, "backendPort": 6432, "enableFloatingIP": false, "idleTimeoutInMinutes": 30, "probe": { "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('pgbIlbName'), variables('pgbProbeName'))]" } } } ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}-nic', variables('vmNames')[copyIndex()])]",
      "location": "[parameters('region')]",
      "copy": { "name": "nicLoop", "count": 3 },
      "properties": {
        "ipConfigurations": [ { "name": "ipconfig1", "properties": { "subnet": { "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]" }, "privateIPAllocationMethod": "Static", "privateIPAddress": "[variables('vmIps')[copyIndex()]]", "loadBalancerBackendAddressPools": [ { "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ilbName'), variables('bePoolName'))]" } ] } } ],
        "networkSecurityGroup": { "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]" }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('ilbName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}-nic', variables('pgbVmNames')[copyIndex()])]",
      "location": "[parameters('region')]",
      "condition": "[parameters('enablePgBouncerTier')]",
      "copy": { "name": "pgbNicLoop", "count": 2 },
      "properties": {
        "ipConfigurations": [ { "name": "ipconfig1", "properties": { "subnet": { "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]" }, "privateIPAllocationMethod": "Static", "privateIPAddress": "[variables('pgbVmIps')[copyIndex()]]", "loadBalancerBackendAddressPools": [ { "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('pgbIlbName'), variables('pgbBePoolName'))]" } ] } } ],
        "networkSecurityGroup": { "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]" }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('pgbIlbName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-03-01",
      "name": "[variables('vmNames')[copyIndex()]]",
      "location": "[parameters('region')]",
      "zones": [ "[variables('vmZones')[copyIndex()]]" ],
      "copy": { "name": "vmLoop", "count": 3 },
      "properties": {
        "hardwareProfile": { "vmSize": "[parameters('vmSize')]" },
        "osProfile": {
          "computerName": "[variables('vmNames')[copyIndex()]]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": { "disablePasswordAuthentication": false },
          "customData": "[variables('cloudInitScript')]"
        },
        "storageProfile": {
          "imageReference": { "publisher": "Canonical", "offer": "0001-com-ubuntu-server-jammy", "sku": "22_04-lts", "version": "latest" },
          "osDisk": { "createOption": "FromImage", "managedDisk": { "storageAccountType": "Premium_LRS" } },
          "dataDisks": [ { "lun": 0, "createOption": "Empty", "diskSizeGB": "[parameters('dataDiskSizeGB')]", "managedDisk": { "storageAccountType": "PremiumV2_LRS" } }, { "lun": 1, "createOption": "Empty", "diskSizeGB": "[parameters('walDiskSizeGB')]", "managedDisk": { "storageAccountType": "PremiumV2_LRS" } } ]
        },
        "networkProfile": { "networkInterfaces": [ { "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmNames')[copyIndex()]))]" } ] }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmNames')[copyIndex()]))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-03-01",
      "name": "[variables('pgbVmNames')[copyIndex()]]",
      "location": "[parameters('region')]",
      "zones": [ "[variables('pgbVmZones')[copyIndex()]]" ],
      "condition": "[parameters('enablePgBouncerTier')]",
      "copy": { "name": "pgbVmLoop", "count": 2 },
      "properties": {
        "hardwareProfile": { "vmSize": "Standard_D2s_v5" },
        "osProfile": {
          "computerName": "[variables('pgbVmNames')[copyIndex()]]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": { "disablePasswordAuthentication": false },
          "customData": "[variables('pgbCloudInitScript')]"
        },
        "storageProfile": {
          "imageReference": { "publisher": "Canonical", "offer": "0001-com-ubuntu-server-jammy", "sku": "22_04-lts", "version": "latest" },
          "osDisk": { "createOption": "FromImage", "managedDisk": { "storageAccountType": "Premium_LRS" } }
        },
        "networkProfile": { "networkInterfaces": [ { "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('pgbVmNames')[copyIndex()]))]" } ] }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('pgbVmNames')[copyIndex()]))]"
      ]
    }
  ],
  "outputs": {
    "dbIlbIP": { "type": "string", "value": "[reference(resourceId('Microsoft.Network/loadBalancers', variables('ilbName'))).frontendIPConfigurations[0].properties.privateIPAddress]" },
    "elbIP": { "type": "string", "value": "[if(parameters('enablePublicLB'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}-elb-pip', parameters('prefix')))).ipAddress, 'disabled')]" },
    "pgbIlbIP": { "type": "string", "value": "[if(parameters('enablePgBouncerTier'), reference(resourceId('Microsoft.Network/loadBalancers', variables('pgbIlbName'))).frontendIPConfigurations[0].properties.privateIPAddress, 'disabled')]" }
  }
}